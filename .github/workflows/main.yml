name: build

on:
  push:
    branches: [develop, main, github-action-testing]
  pull_request:
    branches: [develop, main]
  workflow_dispatch:

jobs:
  pre-flight:
    runs-on: [self-hosted]
    strategy:
      matrix:
        os: [linux]
        python-version: [3.6.15]

    steps:
      # Checkout Repo (required git 2.x.x to be installed on system w/remote-https support)
      - uses: actions/checkout@v2

      # Cache key (for daily, weekly, monthly, or yearly)
      - name: Cache key
        id: cache-key
        run: |
          echo "::set-output name=daily::$(date +'%Y-%m-%d')"
          echo "::set-output name=weekly::$(date +'%Y-%U')"
          echo "::set-output name=monthly::$(date +'%Y-%m')"
          echo "::set-output name=yearly::$(date +'%Y')"

      # Setup Python
      - name: Set up Python ${{ matrix.python-version }}
        run: |
          pyenv install ${{ matrix.python-version }} -s
          pyenv virtualenv ${{ matrix.python-version }} tcex-${{ runner.name }}-${{ matrix.python-version }} -f
          pyenv local tcex-${{ runner.name }}-${{ matrix.python-version }}

      # Cache pre-commit
      - name: Local pre-commit cache
        id: pre-commit-cache
        uses: MasterworksIO/action-local-cache@1.0.0
        with:
          path: ${{ github.workspace }}/.cache/pre-commit-${{ matrix.python-version }}
          key: pre-commit-${{ matrix.python-version }}-${{ hashFiles('.pre-commit-config.yaml') }}

      # Cache pip cache
      - name: Local pip cache
        id: pip-cache
        uses: MasterworksIO/action-local-cache@1.0.0
        with:
          path: ${{ github.workspace }}/.cache/pip-${{ matrix.python-version }}
          key: ${{ runner.os }}-pip-${{ matrix.python-version }}-${{ steps.cache-key.outputs.daily }}

      # Install dependencies
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install .[develop] --force
        env:
          PIP_CACHE_DIR: ${{ github.workspace }}/.cache/pip-${{ matrix.python-version }}

      # Lint project using pre-commit config
      - name: Lint with pre-commit
        run: |
          pre-commit --version
          pre-commit install
          pre-commit run --all-files
        env:
          PRE_COMMIT_HOME: ${{ github.workspace }}/.cache/pre-commit-${{ matrix.python-version }}

  test:
    needs: pre-flight
    runs-on: [self-hosted]
    strategy:
      fail-fast: false
      matrix:
        python-version: [3.6.15, 3.9.10]

    steps:
      - uses: actions/checkout@v2

      # Setup Python
      - name: Set up Python ${{ matrix.python-version }}
        run: |
          pyenv install ${{ matrix.python-version }} -s
          pyenv virtualenv ${{ matrix.python-version }} tcex-${{ runner.name }}-${{ matrix.python-version }} -f
          pyenv local tcex-${{ runner.name }}-${{ matrix.python-version }}

      # Cache key (for daily, weekly, monthly, or yearly)
      - name: Cache key
        id: cache-key
        run: |
          echo "::set-output name=daily::$(date +'%Y-%m-%d')"
          echo "::set-output name=weekly::$(date +'%Y-%U')"
          echo "::set-output name=monthly::$(date +'%Y-%m')"
          echo "::set-output name=yearly::$(date +'%Y')"

      # Cache pip cache
      - name: Local pip cache
        id: pip-cache
        uses: MasterworksIO/action-local-cache@1.0.0
        with:
          path: ${{ github.workspace }}/.cache/pip-${{ matrix.python-version }}
          key: ${{ runner.os }}-pip-${{ matrix.python-version }}-${{ steps.cache-key.outputs.daily }}

      # Install dependencies
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install .[develop] --force
        env:
          PIP_CACHE_DIR: ${{ github.workspace }}/.cache/pip-${{ matrix.python-version }}

      # Test App Config module
      - name: Test with pytest
        run: >
          pytest
          -n auto --dist loadgroup
          --cov=. --cov-report=term-missing --cov-report=html:tests/reports/cov-report-${{ matrix.python-version }}.html
          --durations=25
          --html=tests/reports/tcex-report-${{ matrix.python-version }}.html --self-contained-html
          tests/
          || python tests/rerun_failed_test.py

      # Artifact upload
      - name: Upload pytest test results
        uses: actions/upload-artifact@v2
        with:
          name: pytest-results-${{ matrix.python-version }}
          path: tests/reports/tcex-report-${{ matrix.python-version }}.html
        if: ${{ always() }}
